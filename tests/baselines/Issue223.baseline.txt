original file
-----------------------------------
for (i = 0; i<len ; i++) {
  if (foo) {
    bar = true 
    break 
  }
}
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>for (i = 0; i<len ; i++) {
 ^^^
 source.ts keyword.control.loop.ts
    ^
    source.ts
     ^
     source.ts meta.brace.round.ts
      ^
      source.ts variable.other.readwrite.ts
       ^
       source.ts
        ^
        source.ts keyword.operator.assignment.ts
         ^
         source.ts
          ^
          source.ts constant.numeric.decimal.ts
           ^
           source.ts punctuation.terminator.statement.ts
            ^
            source.ts
             ^
             source.ts variable.other.readwrite.ts
              ^
              source.ts keyword.operator.relational.ts
               ^^^
               source.ts variable.other.readwrite.ts
                  ^
                  source.ts
                   ^
                   source.ts punctuation.terminator.statement.ts
                    ^
                    source.ts
                     ^
                     source.ts variable.other.readwrite.ts
                      ^^
                      source.ts keyword.operator.increment.ts
                        ^
                        source.ts meta.brace.round.ts
                         ^
                         source.ts
                          ^
                          source.ts meta.block.ts punctuation.definition.block.ts
>  if (foo) {
 ^^
 source.ts meta.block.ts
   ^^
   source.ts meta.block.ts keyword.control.conditional.ts
     ^
     source.ts meta.block.ts
      ^
      source.ts meta.block.ts meta.brace.round.ts
       ^^^
       source.ts meta.block.ts variable.other.readwrite.ts
          ^
          source.ts meta.block.ts meta.brace.round.ts
           ^
           source.ts meta.block.ts
            ^
            source.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
>    bar = true 
 ^^^^
 source.ts meta.block.ts meta.block.ts
     ^^^
     source.ts meta.block.ts meta.block.ts variable.other.readwrite.ts
        ^
        source.ts meta.block.ts meta.block.ts
         ^
         source.ts meta.block.ts meta.block.ts keyword.operator.assignment.ts
          ^
          source.ts meta.block.ts meta.block.ts
           ^^^^
           source.ts meta.block.ts meta.block.ts constant.language.boolean.true.ts
               ^^
               source.ts meta.block.ts meta.block.ts
>    break 
 ^^^^
 source.ts meta.block.ts meta.block.ts
     ^^^^^
     source.ts meta.block.ts meta.block.ts keyword.control.loop.flow.ts
          ^^
          source.ts meta.block.ts meta.block.ts
>  }
 ^^
 source.ts meta.block.ts meta.block.ts
   ^
   source.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
>}
 ^
 source.ts meta.block.ts punctuation.definition.block.ts