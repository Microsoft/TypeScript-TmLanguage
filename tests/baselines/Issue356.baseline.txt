original file
-----------------------------------
function formatBigNum(num) {
  num = Number(num)
  if (num < 10000) {
    return num
  }
  return (num/10000).toString().replace(/(\.[\d]{1})\d+$/,"$1") + 'w '
}
let hbAnimIndex = 0;
let hbAnimNode = null;
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>function formatBigNum(num) {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^^^^^^^^^^^^
          source.ts meta.function.ts meta.definition.function.ts entity.name.function.ts
                      ^
                      source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                       ^^^
                       source.ts meta.function.ts meta.parameters.ts variable.parameter.ts
                          ^
                          source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                           ^
                           source.ts meta.function.ts
                            ^
                            source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
                             ^^
                             source.ts meta.function.ts meta.block.ts
>  num = Number(num)
 ^^
 source.ts meta.function.ts meta.block.ts
   ^^^
   source.ts meta.function.ts meta.block.ts variable.other.readwrite.ts
      ^
      source.ts meta.function.ts meta.block.ts
       ^
       source.ts meta.function.ts meta.block.ts keyword.operator.assignment.ts
        ^
        source.ts meta.function.ts meta.block.ts
         ^^^^^^
         source.ts meta.function.ts meta.block.ts meta.function-call.ts support.class.builtin.ts
               ^
               source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                ^^^
                source.ts meta.function.ts meta.block.ts meta.function-call.ts variable.other.readwrite.ts
                   ^
                   source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                    ^^
                    source.ts meta.function.ts meta.block.ts
>  if (num < 10000) {
 ^^
 source.ts meta.function.ts meta.block.ts
   ^^
   source.ts meta.function.ts meta.block.ts keyword.control.conditional.ts
     ^
     source.ts meta.function.ts meta.block.ts
      ^
      source.ts meta.function.ts meta.block.ts meta.brace.round.ts
       ^^^
       source.ts meta.function.ts meta.block.ts variable.other.readwrite.ts
          ^
          source.ts meta.function.ts meta.block.ts
           ^
           source.ts meta.function.ts meta.block.ts keyword.operator.relational.ts
            ^
            source.ts meta.function.ts meta.block.ts
             ^^^^^
             source.ts meta.function.ts meta.block.ts constant.numeric.decimal.ts
                  ^
                  source.ts meta.function.ts meta.block.ts meta.brace.round.ts
                   ^
                   source.ts meta.function.ts meta.block.ts
                    ^
                    source.ts meta.function.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
                     ^^
                     source.ts meta.function.ts meta.block.ts meta.block.ts
>    return num
 ^^^^
 source.ts meta.function.ts meta.block.ts meta.block.ts
     ^^^^^^
     source.ts meta.function.ts meta.block.ts meta.block.ts keyword.control.flow.ts
           ^
           source.ts meta.function.ts meta.block.ts meta.block.ts
            ^^^
            source.ts meta.function.ts meta.block.ts meta.block.ts variable.other.readwrite.ts
               ^^
               source.ts meta.function.ts meta.block.ts meta.block.ts
>  }
 ^^
 source.ts meta.function.ts meta.block.ts meta.block.ts
   ^
   source.ts meta.function.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
    ^^
    source.ts meta.function.ts meta.block.ts
>  return (num/10000).toString().replace(/(\.[\d]{1})\d+$/,"$1") + 'w '
 ^^
 source.ts meta.function.ts meta.block.ts
   ^^^^^^
   source.ts meta.function.ts meta.block.ts keyword.control.flow.ts
         ^
         source.ts meta.function.ts meta.block.ts
          ^
          source.ts meta.function.ts meta.block.ts meta.brace.round.ts
           ^^^
           source.ts meta.function.ts meta.block.ts variable.other.readwrite.ts
              ^
              source.ts meta.function.ts meta.block.ts keyword.operator.arithmetic.ts
               ^^^^^
               source.ts meta.function.ts meta.block.ts constant.numeric.decimal.ts
                    ^
                    source.ts meta.function.ts meta.block.ts meta.brace.round.ts
                     ^
                     source.ts meta.function.ts meta.block.ts meta.function-call.ts punctuation.accessor.ts
                      ^^^^^^^^
                      source.ts meta.function.ts meta.block.ts meta.function-call.ts support.function.ts
                              ^
                              source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                               ^
                               source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                                ^
                                source.ts meta.function.ts meta.block.ts meta.function-call.ts punctuation.accessor.ts
                                 ^^^^^^^
                                 source.ts meta.function.ts meta.block.ts meta.function-call.ts support.function.ts
                                        ^
                                        source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                                         ^
                                         source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts punctuation.definition.string.begin.ts
                                          ^
                                          source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts meta.group.regexp punctuation.definition.group.regexp
                                           ^^
                                           source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts meta.group.regexp constant.character.escape.backslash.regexp
                                             ^
                                             source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts meta.group.regexp constant.other.character-class.set.regexp punctuation.definition.character-class.regexp
                                              ^^
                                              source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts meta.group.regexp constant.other.character-class.set.regexp constant.other.character-class.regexp
                                                ^
                                                source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts meta.group.regexp constant.other.character-class.set.regexp punctuation.definition.character-class.regexp
                                                 ^^^
                                                 source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts meta.group.regexp keyword.operator.quantifier.regexp
                                                    ^
                                                    source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts meta.group.regexp punctuation.definition.group.regexp
                                                     ^^
                                                     source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts constant.other.character-class.regexp
                                                       ^
                                                       source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts keyword.operator.quantifier.regexp
                                                        ^
                                                        source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts keyword.control.anchor.regexp
                                                         ^
                                                         source.ts meta.function.ts meta.block.ts meta.function-call.ts string.regex.ts punctuation.definition.string.end.ts
                                                          ^
                                                          source.ts meta.function.ts meta.block.ts meta.function-call.ts punctuation.separator.comma.ts
                                                           ^
                                                           source.ts meta.function.ts meta.block.ts meta.function-call.ts string.quoted.double.ts punctuation.definition.string.begin.ts
                                                            ^^
                                                            source.ts meta.function.ts meta.block.ts meta.function-call.ts string.quoted.double.ts
                                                              ^
                                                              source.ts meta.function.ts meta.block.ts meta.function-call.ts string.quoted.double.ts punctuation.definition.string.end.ts
                                                               ^
                                                               source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                                                                ^
                                                                source.ts meta.function.ts meta.block.ts
                                                                 ^
                                                                 source.ts meta.function.ts meta.block.ts keyword.operator.arithmetic.ts
                                                                  ^
                                                                  source.ts meta.function.ts meta.block.ts
                                                                   ^
                                                                   source.ts meta.function.ts meta.block.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                                                                    ^^
                                                                    source.ts meta.function.ts meta.block.ts string.quoted.single.ts
                                                                      ^
                                                                      source.ts meta.function.ts meta.block.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                                                       ^^
                                                                       source.ts meta.function.ts meta.block.ts
>}
 ^
 source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
  ^^
  source.ts
>let hbAnimIndex = 0;
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^^^^^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
                ^
                source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                 ^
                 source.ts meta.var.expr.ts keyword.operator.assignment.ts
                  ^
                  source.ts meta.var.expr.ts
                   ^
                   source.ts meta.var.expr.ts constant.numeric.decimal.ts
                    ^
                    source.ts punctuation.terminator.statement.ts
                     ^^
                     source.ts
>let hbAnimNode = null;
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^^^^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
               ^
               source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                ^
                source.ts meta.var.expr.ts keyword.operator.assignment.ts
                 ^
                 source.ts meta.var.expr.ts
                  ^^^^
                  source.ts meta.var.expr.ts constant.language.null.ts
                      ^
                      source.ts punctuation.terminator.statement.ts