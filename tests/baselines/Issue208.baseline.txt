original file
-----------------------------------
var someVar = new Thing<number, string>('data');
var someVar = makeThing<number, string>('data');

class MyClass {
    static someProp = new Thing<number, string>('data');
    static someProp = makeThing<number, string>('data');

    someProp = new Thing<number, string>('data');
    someProp = makeThing<number, string>('data');
}
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>var someVar = new Thing<number, string>('data');
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
            ^
            source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
             ^
             source.ts meta.var.expr.ts keyword.operator.assignment.ts
              ^
              source.ts meta.var.expr.ts
               ^^^
               source.ts meta.var.expr.ts new.expr.ts keyword.operator.new.ts
                  ^
                  source.ts meta.var.expr.ts new.expr.ts
                   ^^^^^
                   source.ts meta.var.expr.ts new.expr.ts entity.name.type.ts
                        ^
                        source.ts meta.var.expr.ts new.expr.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                         ^^^^^^
                         source.ts meta.var.expr.ts new.expr.ts meta.type.parameters.ts support.type.primitive.ts
                               ^
                               source.ts meta.var.expr.ts new.expr.ts meta.type.parameters.ts punctuation.separator.comma.ts
                                ^
                                source.ts meta.var.expr.ts new.expr.ts meta.type.parameters.ts
                                 ^^^^^^
                                 source.ts meta.var.expr.ts new.expr.ts meta.type.parameters.ts support.type.primitive.ts
                                       ^
                                       source.ts meta.var.expr.ts new.expr.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                        ^
                                        source.ts meta.var.expr.ts new.expr.ts meta.brace.round.ts
                                         ^
                                         source.ts meta.var.expr.ts new.expr.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                                          ^^^^
                                          source.ts meta.var.expr.ts new.expr.ts string.quoted.single.ts
                                              ^
                                              source.ts meta.var.expr.ts new.expr.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                               ^
                                               source.ts meta.var.expr.ts new.expr.ts meta.brace.round.ts
                                                ^
                                                source.ts punctuation.terminator.statement.ts
>var someVar = makeThing<number, string>('data');
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
            ^
            source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
             ^
             source.ts meta.var.expr.ts keyword.operator.assignment.ts
              ^
              source.ts meta.var.expr.ts
               ^^^^^^^^^
               source.ts meta.var.expr.ts meta.function-call.ts entity.name.function.ts
                        ^
                        source.ts meta.var.expr.ts meta.function-call.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                         ^^^^^^
                         source.ts meta.var.expr.ts meta.function-call.ts meta.type.parameters.ts support.type.primitive.ts
                               ^
                               source.ts meta.var.expr.ts meta.function-call.ts meta.type.parameters.ts punctuation.separator.comma.ts
                                ^
                                source.ts meta.var.expr.ts meta.function-call.ts meta.type.parameters.ts
                                 ^^^^^^
                                 source.ts meta.var.expr.ts meta.function-call.ts meta.type.parameters.ts support.type.primitive.ts
                                       ^
                                       source.ts meta.var.expr.ts meta.function-call.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                        ^
                                        source.ts meta.var.expr.ts meta.function-call.ts meta.brace.round.ts
                                         ^
                                         source.ts meta.var.expr.ts meta.function-call.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                                          ^^^^
                                          source.ts meta.var.expr.ts meta.function-call.ts string.quoted.single.ts
                                              ^
                                              source.ts meta.var.expr.ts meta.function-call.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                               ^
                                               source.ts meta.var.expr.ts meta.function-call.ts meta.brace.round.ts
                                                ^
                                                source.ts punctuation.terminator.statement.ts
>
 ^
 source.ts
>class MyClass {
 ^^^^^
 source.ts meta.class.ts storage.type.class.ts
      ^
      source.ts meta.class.ts
       ^^^^^^^
       source.ts meta.class.ts entity.name.type.class.ts
              ^
              source.ts meta.class.ts
               ^
               source.ts meta.class.ts punctuation.definition.block.ts
>    static someProp = new Thing<number, string>('data');
 ^^^^
 source.ts meta.class.ts
     ^^^^^^
     source.ts meta.class.ts storage.modifier.ts
           ^
           source.ts meta.class.ts
            ^^^^^^^^
            source.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                    ^
                    source.ts meta.class.ts meta.field.declaration.ts
                     ^
                     source.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                      ^
                      source.ts meta.class.ts meta.field.declaration.ts
                       ^^^
                       source.ts meta.class.ts meta.field.declaration.ts new.expr.ts keyword.operator.new.ts
                          ^
                          source.ts meta.class.ts meta.field.declaration.ts new.expr.ts
                           ^^^^^
                           source.ts meta.class.ts meta.field.declaration.ts new.expr.ts entity.name.type.ts
                                ^
                                source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                                 ^^^^^^
                                 source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts support.type.primitive.ts
                                       ^
                                       source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts punctuation.separator.comma.ts
                                        ^
                                        source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts
                                         ^^^^^^
                                         source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts support.type.primitive.ts
                                               ^
                                               source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                                ^
                                                source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.brace.round.ts
                                                 ^
                                                 source.ts meta.class.ts meta.field.declaration.ts new.expr.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                                                  ^^^^
                                                  source.ts meta.class.ts meta.field.declaration.ts new.expr.ts string.quoted.single.ts
                                                      ^
                                                      source.ts meta.class.ts meta.field.declaration.ts new.expr.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                                       ^
                                                       source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.brace.round.ts
                                                        ^
                                                        source.ts meta.class.ts punctuation.terminator.statement.ts
>    static someProp = makeThing<number, string>('data');
 ^^^^
 source.ts meta.class.ts
     ^^^^^^
     source.ts meta.class.ts storage.modifier.ts
           ^
           source.ts meta.class.ts
            ^^^^^^^^
            source.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                    ^
                    source.ts meta.class.ts meta.field.declaration.ts
                     ^
                     source.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                      ^
                      source.ts meta.class.ts meta.field.declaration.ts
                       ^^^^^^^^^
                       source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts entity.name.function.ts
                                ^
                                source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                                 ^^^^^^
                                 source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts support.type.primitive.ts
                                       ^
                                       source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts punctuation.separator.comma.ts
                                        ^
                                        source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts
                                         ^^^^^^
                                         source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts support.type.primitive.ts
                                               ^
                                               source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                                ^
                                                source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.brace.round.ts
                                                 ^
                                                 source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                                                  ^^^^
                                                  source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts string.quoted.single.ts
                                                      ^
                                                      source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                                       ^
                                                       source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.brace.round.ts
                                                        ^
                                                        source.ts meta.class.ts punctuation.terminator.statement.ts
>
 ^
 source.ts meta.class.ts
>    someProp = new Thing<number, string>('data');
 ^^^^
 source.ts meta.class.ts
     ^^^^^^^^
     source.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
             ^
             source.ts meta.class.ts meta.field.declaration.ts
              ^
              source.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
               ^
               source.ts meta.class.ts meta.field.declaration.ts
                ^^^
                source.ts meta.class.ts meta.field.declaration.ts new.expr.ts keyword.operator.new.ts
                   ^
                   source.ts meta.class.ts meta.field.declaration.ts new.expr.ts
                    ^^^^^
                    source.ts meta.class.ts meta.field.declaration.ts new.expr.ts entity.name.type.ts
                         ^
                         source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                          ^^^^^^
                          source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts support.type.primitive.ts
                                ^
                                source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts punctuation.separator.comma.ts
                                 ^
                                 source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts
                                  ^^^^^^
                                  source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts support.type.primitive.ts
                                        ^
                                        source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                         ^
                                         source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.brace.round.ts
                                          ^
                                          source.ts meta.class.ts meta.field.declaration.ts new.expr.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                                           ^^^^
                                           source.ts meta.class.ts meta.field.declaration.ts new.expr.ts string.quoted.single.ts
                                               ^
                                               source.ts meta.class.ts meta.field.declaration.ts new.expr.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                                ^
                                                source.ts meta.class.ts meta.field.declaration.ts new.expr.ts meta.brace.round.ts
                                                 ^
                                                 source.ts meta.class.ts punctuation.terminator.statement.ts
>    someProp = makeThing<number, string>('data');
 ^^^^
 source.ts meta.class.ts
     ^^^^^^^^
     source.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
             ^
             source.ts meta.class.ts meta.field.declaration.ts
              ^
              source.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
               ^
               source.ts meta.class.ts meta.field.declaration.ts
                ^^^^^^^^^
                source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts entity.name.function.ts
                         ^
                         source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                          ^^^^^^
                          source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts support.type.primitive.ts
                                ^
                                source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts punctuation.separator.comma.ts
                                 ^
                                 source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts
                                  ^^^^^^
                                  source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts support.type.primitive.ts
                                        ^
                                        source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                         ^
                                         source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.brace.round.ts
                                          ^
                                          source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                                           ^^^^
                                           source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts string.quoted.single.ts
                                               ^
                                               source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                                ^
                                                source.ts meta.class.ts meta.field.declaration.ts meta.function-call.ts meta.brace.round.ts
                                                 ^
                                                 source.ts meta.class.ts punctuation.terminator.statement.ts
>}
 ^
 source.ts meta.class.ts punctuation.definition.block.ts