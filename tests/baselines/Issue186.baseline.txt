original file
-----------------------------------
function myFunction(param1, param2, number, string, boolean) {
  let y = (number) => {
    console.log(param1);
  }
  console.log(param1);
  console.log(param1 + number);
  console.log(string);
  console.log(boolean);
  let x = param1 ? 2 : param2;
}
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>function myFunction(param1, param2, number, string, boolean) {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^^^^^^^^^^
          source.ts meta.function.ts meta.definition.function.ts entity.name.function.ts
                    ^
                    source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                     ^^^^^^
                     source.ts meta.function.ts meta.parameters.ts variable.parameter.ts
                           ^
                           source.ts meta.function.ts meta.parameters.ts punctuation.separator.parameter.ts
                            ^
                            source.ts meta.function.ts meta.parameters.ts
                             ^^^^^^
                             source.ts meta.function.ts meta.parameters.ts variable.parameter.ts
                                   ^
                                   source.ts meta.function.ts meta.parameters.ts punctuation.separator.parameter.ts
                                    ^
                                    source.ts meta.function.ts meta.parameters.ts
                                     ^^^^^^
                                     source.ts meta.function.ts meta.parameters.ts variable.parameter.ts
                                           ^
                                           source.ts meta.function.ts meta.parameters.ts punctuation.separator.parameter.ts
                                            ^
                                            source.ts meta.function.ts meta.parameters.ts
                                             ^^^^^^
                                             source.ts meta.function.ts meta.parameters.ts variable.parameter.ts
                                                   ^
                                                   source.ts meta.function.ts meta.parameters.ts punctuation.separator.parameter.ts
                                                    ^
                                                    source.ts meta.function.ts meta.parameters.ts
                                                     ^^^^^^^
                                                     source.ts meta.function.ts meta.parameters.ts variable.parameter.ts
                                                            ^
                                                            source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                                             ^
                                                             source.ts meta.function.ts
                                                              ^
                                                              source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
>  let y = (number) => {
 ^^
 source.ts meta.function.ts meta.block.ts
   ^^^
   source.ts meta.function.ts meta.block.ts meta.var.expr.ts storage.type.ts
      ^
      source.ts meta.function.ts meta.block.ts meta.var.expr.ts
       ^
       source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts entity.name.function.ts
        ^
        source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
         ^
         source.ts meta.function.ts meta.block.ts meta.var.expr.ts keyword.operator.assignment.ts
          ^
          source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts
           ^
           source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
            ^^^^^^
            source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts variable.parameter.ts
                  ^
                  source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                   ^
                   source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts
                    ^^
                    source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts storage.type.function.arrow.ts
                      ^
                      source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts
                       ^
                       source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
>    console.log(param1);
 ^^^^
 source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts
     ^^^^^^^
     source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.function-call.ts support.class.console.ts
            ^
            source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.function-call.ts punctuation.accessor.ts
             ^^^
             source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.function-call.ts support.function.console.ts
                ^
                source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                 ^^^^^^
                 source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.function-call.ts variable.other.readwrite.ts
                       ^
                       source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                        ^
                        source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts punctuation.terminator.statement.ts
>  }
 ^^
 source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts
   ^
   source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
>  console.log(param1);
 ^^
 source.ts meta.function.ts meta.block.ts
   ^^^^^^^
   source.ts meta.function.ts meta.block.ts meta.function-call.ts support.class.console.ts
          ^
          source.ts meta.function.ts meta.block.ts meta.function-call.ts punctuation.accessor.ts
           ^^^
           source.ts meta.function.ts meta.block.ts meta.function-call.ts support.function.console.ts
              ^
              source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
               ^^^^^^
               source.ts meta.function.ts meta.block.ts meta.function-call.ts variable.other.readwrite.ts
                     ^
                     source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                      ^
                      source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
>  console.log(param1 + number);
 ^^
 source.ts meta.function.ts meta.block.ts
   ^^^^^^^
   source.ts meta.function.ts meta.block.ts meta.function-call.ts support.class.console.ts
          ^
          source.ts meta.function.ts meta.block.ts meta.function-call.ts punctuation.accessor.ts
           ^^^
           source.ts meta.function.ts meta.block.ts meta.function-call.ts support.function.console.ts
              ^
              source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
               ^^^^^^
               source.ts meta.function.ts meta.block.ts meta.function-call.ts variable.other.readwrite.ts
                     ^
                     source.ts meta.function.ts meta.block.ts meta.function-call.ts
                      ^
                      source.ts meta.function.ts meta.block.ts meta.function-call.ts keyword.operator.arithmetic.ts
                       ^
                       source.ts meta.function.ts meta.block.ts meta.function-call.ts
                        ^^^^^^
                        source.ts meta.function.ts meta.block.ts meta.function-call.ts variable.other.readwrite.ts
                              ^
                              source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                               ^
                               source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
>  console.log(string);
 ^^
 source.ts meta.function.ts meta.block.ts
   ^^^^^^^
   source.ts meta.function.ts meta.block.ts meta.function-call.ts support.class.console.ts
          ^
          source.ts meta.function.ts meta.block.ts meta.function-call.ts punctuation.accessor.ts
           ^^^
           source.ts meta.function.ts meta.block.ts meta.function-call.ts support.function.console.ts
              ^
              source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
               ^^^^^^
               source.ts meta.function.ts meta.block.ts meta.function-call.ts variable.other.readwrite.ts
                     ^
                     source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                      ^
                      source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
>  console.log(boolean);
 ^^
 source.ts meta.function.ts meta.block.ts
   ^^^^^^^
   source.ts meta.function.ts meta.block.ts meta.function-call.ts support.class.console.ts
          ^
          source.ts meta.function.ts meta.block.ts meta.function-call.ts punctuation.accessor.ts
           ^^^
           source.ts meta.function.ts meta.block.ts meta.function-call.ts support.function.console.ts
              ^
              source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
               ^^^^^^^
               source.ts meta.function.ts meta.block.ts meta.function-call.ts variable.other.readwrite.ts
                      ^
                      source.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                       ^
                       source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
>  let x = param1 ? 2 : param2;
 ^^
 source.ts meta.function.ts meta.block.ts
   ^^^
   source.ts meta.function.ts meta.block.ts meta.var.expr.ts storage.type.ts
      ^
      source.ts meta.function.ts meta.block.ts meta.var.expr.ts
       ^
       source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
        ^
        source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
         ^
         source.ts meta.function.ts meta.block.ts meta.var.expr.ts keyword.operator.assignment.ts
          ^
          source.ts meta.function.ts meta.block.ts meta.var.expr.ts
           ^^^^^^
           source.ts meta.function.ts meta.block.ts meta.var.expr.ts variable.other.readwrite.ts
                 ^
                 source.ts meta.function.ts meta.block.ts meta.var.expr.ts
                  ^
                  source.ts meta.function.ts meta.block.ts meta.var.expr.ts keyword.operator.ternary.ts
                   ^
                   source.ts meta.function.ts meta.block.ts meta.var.expr.ts
                    ^
                    source.ts meta.function.ts meta.block.ts meta.var.expr.ts constant.numeric.decimal.ts
                     ^
                     source.ts meta.function.ts meta.block.ts meta.var.expr.ts
                      ^
                      source.ts meta.function.ts meta.block.ts meta.var.expr.ts keyword.operator.ternary.ts
                       ^
                       source.ts meta.function.ts meta.block.ts meta.var.expr.ts
                        ^^^^^^
                        source.ts meta.function.ts meta.block.ts meta.var.expr.ts variable.other.readwrite.ts
                              ^
                              source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
>}
 ^
 source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts