original file
-----------------------------------
    this.Then(
        /^display prompt in branch "([^"]*)"$/,
        async function (branchName) {
            const expected = application.prompt(branchName);
            const actual = await application.getOnceOut();
            expect(actual).to.be.equal(expected);
        }
    );

-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>    this.Then(
 ^^^^
 source.ts
     ^^^^
     source.ts meta.function-call.ts variable.language.this.ts
         ^
         source.ts meta.function-call.ts punctuation.accessor.ts
          ^^^^
          source.ts meta.function-call.ts variable.function.ts
              ^
              source.ts meta.function-call.ts meta.brace.round.ts
               ^^
               source.ts meta.function-call.ts
>        /^display prompt in branch "([^"]*)"$/,
 ^^^^^^^^
 source.ts meta.function-call.ts
         ^
         source.ts meta.function-call.ts string.regex.ts punctuation.definition.string.begin.ts
          ^
          source.ts meta.function-call.ts string.regex.ts keyword.control.anchor.regexp
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
           source.ts meta.function-call.ts string.regex.ts
                                     ^
                                     source.ts meta.function-call.ts string.regex.ts meta.group.regexp punctuation.definition.group.regexp
                                      ^
                                      source.ts meta.function-call.ts string.regex.ts meta.group.regexp constant.other.character-class.set.regexp punctuation.definition.character-class.regexp
                                       ^
                                       source.ts meta.function-call.ts string.regex.ts meta.group.regexp constant.other.character-class.set.regexp keyword.operator.negation.regexp
                                        ^
                                        source.ts meta.function-call.ts string.regex.ts meta.group.regexp constant.other.character-class.set.regexp
                                         ^
                                         source.ts meta.function-call.ts string.regex.ts meta.group.regexp constant.other.character-class.set.regexp punctuation.definition.character-class.regexp
                                          ^
                                          source.ts meta.function-call.ts string.regex.ts meta.group.regexp keyword.operator.quantifier.regexp
                                           ^
                                           source.ts meta.function-call.ts string.regex.ts meta.group.regexp punctuation.definition.group.regexp
                                            ^
                                            source.ts meta.function-call.ts string.regex.ts
                                             ^
                                             source.ts meta.function-call.ts string.regex.ts keyword.control.anchor.regexp
                                              ^
                                              source.ts meta.function-call.ts string.regex.ts punctuation.definition.string.end.ts
                                               ^
                                               source.ts meta.function-call.ts punctuation.separator.comma.ts
                                                ^^
                                                source.ts meta.function-call.ts
>        async function (branchName) {
 ^^^^^^^^
 source.ts meta.function-call.ts
         ^^^^^
         source.ts meta.function-call.ts meta.function.ts storage.modifier.async.ts
              ^
              source.ts meta.function-call.ts meta.function.ts
               ^^^^^^^^
               source.ts meta.function-call.ts meta.function.ts storage.type.function.ts
                       ^
                       source.ts meta.function-call.ts meta.function.ts
                        ^
                        source.ts meta.function-call.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                         ^^^^^^^^^^
                         source.ts meta.function-call.ts meta.function.ts meta.parameters.ts variable.parameter.ts
                                   ^
                                   source.ts meta.function-call.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                    ^
                                    source.ts meta.function-call.ts meta.function.ts
                                     ^
                                     source.ts meta.function-call.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
                                      ^^
                                      source.ts meta.function-call.ts meta.function.ts meta.block.ts
>            const expected = application.prompt(branchName);
 ^^^^^^^^^^^^
 source.ts meta.function-call.ts meta.function.ts meta.block.ts
             ^^^^^
             source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts storage.type.ts
                  ^
                  source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts
                   ^^^^^^^^
                   source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
                           ^
                           source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                            ^
                            source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts keyword.operator.assignment.ts
                             ^
                             source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts
                              ^^^^^^^^^^^
                              source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts variable.other.object.ts
                                         ^
                                         source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts punctuation.accessor.ts
                                          ^^^^^^
                                          source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts support.function.ts
                                                ^
                                                source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts meta.brace.round.ts
                                                 ^^^^^^^^^^
                                                 source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts variable.other.readwrite.ts
                                                           ^
                                                           source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts meta.brace.round.ts
                                                            ^
                                                            source.ts meta.function-call.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
                                                             ^^
                                                             source.ts meta.function-call.ts meta.function.ts meta.block.ts
>            const actual = await application.getOnceOut();
 ^^^^^^^^^^^^
 source.ts meta.function-call.ts meta.function.ts meta.block.ts
             ^^^^^
             source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts storage.type.ts
                  ^
                  source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts
                   ^^^^^^
                   source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
                         ^
                         source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                          ^
                          source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts keyword.operator.assignment.ts
                           ^
                           source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts
                            ^^^^^
                            source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts keyword.control.flow.ts
                                 ^
                                 source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts
                                  ^^^^^^^^^^^
                                  source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts variable.other.object.ts
                                             ^
                                             source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts punctuation.accessor.ts
                                              ^^^^^^^^^^
                                              source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts variable.function.ts
                                                        ^
                                                        source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts meta.brace.round.ts
                                                         ^
                                                         source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts meta.brace.round.ts
                                                          ^
                                                          source.ts meta.function-call.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
                                                           ^^
                                                           source.ts meta.function-call.ts meta.function.ts meta.block.ts
>            expect(actual).to.be.equal(expected);
 ^^^^^^^^^^^^
 source.ts meta.function-call.ts meta.function.ts meta.block.ts
             ^^^^^^
             source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.function-call.ts variable.function.ts
                   ^
                   source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                    ^^^^^^
                    source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.function-call.ts variable.other.readwrite.ts
                          ^
                          source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                           ^
                           source.ts meta.function-call.ts meta.function.ts meta.block.ts punctuation.accessor.ts
                            ^^
                            source.ts meta.function-call.ts meta.function.ts meta.block.ts variable.other.object.property.ts
                              ^
                              source.ts meta.function-call.ts meta.function.ts meta.block.ts punctuation.accessor.ts
                               ^^
                               source.ts meta.function-call.ts meta.function.ts meta.block.ts variable.other.object.property.ts
                                 ^
                                 source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.function-call.ts punctuation.accessor.ts
                                  ^^^^^
                                  source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.function-call.ts variable.function.ts
                                       ^
                                       source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                                        ^^^^^^^^
                                        source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.function-call.ts variable.other.readwrite.ts
                                                ^
                                                source.ts meta.function-call.ts meta.function.ts meta.block.ts meta.function-call.ts meta.brace.round.ts
                                                 ^
                                                 source.ts meta.function-call.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
                                                  ^^
                                                  source.ts meta.function-call.ts meta.function.ts meta.block.ts
>        }
 ^^^^^^^^
 source.ts meta.function-call.ts meta.function.ts meta.block.ts
         ^
         source.ts meta.function-call.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
          ^^
          source.ts meta.function-call.ts
>    );
 ^^^^
 source.ts meta.function-call.ts
     ^
     source.ts meta.function-call.ts meta.brace.round.ts
      ^
      source.ts punctuation.terminator.statement.ts
       ^^
       source.ts
>
 ^
 source.ts